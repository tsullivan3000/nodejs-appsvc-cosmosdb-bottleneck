<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">JMeterUtils.setProperty(&quot;javax.net.ssl.keyStore&quot;,&quot;C:\JMeter\test-plans\Bifrost\BifrostePAJavakeyStore.jks&quot;);</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor- Set System Properties" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">JMeterUtils.setProperty(&quot;javax.net.ssl.keyStore&quot;,C:\JMeter\test-plans\Bifrost\BifrostePAJavakeyStore.jks);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler - Set System Properties" enabled="true">
          <stringProp name="BeanShellSampler.query">JMeterUtils.setProperty(&quot;javax.net.ssl.keyStore&quot;,&quot;C:\JMeter\test-plans\Bifrost\BifrostePAJavakeyStore.jks&quot;);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="udv-appToken" elementType="Argument">
              <stringProp name="Argument.name">udv-appToken</stringProp>
              <stringProp name="Argument.value">${__GetSecret(appToken)}</stringProp>
              <stringProp name="Argument.desc">Value for x-secret header</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetHealth" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">health</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetReady" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">health/ready</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetLive" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - ACK" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>50.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="2199177">GUID</stringProp>
              <stringProp name="99628272">hubId</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="575553432">
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="-1101057756">${hubId}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save-mail" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;hubId&quot;: &quot;${GUID}&quot;,&#xd;
    &quot;accountId&quot;: &quot;ABC1234567890&quot;,&#xd;
    &quot;appId&quot;: &quot;HM&quot;,&#xd;
    &quot;messageType&quot;: &quot;epa&quot;,&#xd;
    &quot;payload&quot;: &quot;&lt;xml&gt;&lt;Ack&gt;&lt;/Ack&gt;&lt;/xml&gt;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/mail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - AppId" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>100.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time - Wait for Mail Items" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byappId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/mailheader/appid/HM</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.commons.lang.StringUtils;

String response = new String(data);

vars.put(&quot;HubIds&quot;, String.valueOf(response));

int count = StringUtils.countMatches(response, &quot;,&quot;);
int itemCount = count + 1;
vars.put(&quot;itemCount&quot;, String.valueOf(itemCount));


/*
int startOfGuid = 0;
int endOfGuid = 0;
String hubId=&quot;&quot;;
for(var i = 0; i &lt; itemCount; i++)
    {
 	   startOfGuid = endOfGuid+3;
	   endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid)-1;
	   hubId = StringUtils.substring(response,startOfGuid,endOfGuid);
	   vars.put(&quot;hubId&quot;, hubId);
    }

vars.put(&quot;startOfGuid&quot;,String.valueOf(startOfGuid));
vars.put(&quot;endOfGuid&quot;,String.valueOf(endOfGuid));


int startOfGuid = 1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;);
String guid1 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid1&quot;, guid1);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid2 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid2&quot;, guid2);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid3 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid3&quot;, guid3);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid4 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid4&quot;, guid4);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid5 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid5&quot;, guid5);
*/
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">GUID</stringProp>
                <stringProp name="RegexExtractor.regex">\&quot;([^&quot;]+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">true</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">true</boolProp>
            </DebugSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${itemCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${itemCount}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">ItemNumber</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byhubId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/mail/hubId/${__V(GUID_${ItemNumber})}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time - Wait for Mail Items" enabled="false">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration"></stringProp>
          </TestAction>
          <hashTree/>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - AccountId" enabled="false">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time - Wait for Mail Items" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byaccountId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/mailheader/accountid/ABC1234567890</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.commons.lang.StringUtils;

String response = new String(data);

vars.put(&quot;HubIds&quot;, String.valueOf(response));

int count = StringUtils.countMatches(response, &quot;,&quot;);
int itemCount = count + 1;
vars.put(&quot;itemCount&quot;, String.valueOf(itemCount));


/*
int startOfGuid = 0;
int endOfGuid = 0;
String hubId=&quot;&quot;;
for(var i = 0; i &lt; itemCount; i++)
    {
 	   startOfGuid = endOfGuid+3;
	   endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid)-1;
	   hubId = StringUtils.substring(response,startOfGuid,endOfGuid);
	   vars.put(&quot;hubId&quot;, hubId);
    }

vars.put(&quot;startOfGuid&quot;,String.valueOf(startOfGuid));
vars.put(&quot;endOfGuid&quot;,String.valueOf(endOfGuid));


int startOfGuid = 1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;);
String guid1 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid1&quot;, guid1);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid2 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid2&quot;, guid2);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid3 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid3&quot;, guid3);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid4 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid4&quot;, guid4);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid5 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid5&quot;, guid5);
*/
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">GUID</stringProp>
                <stringProp name="RegexExtractor.regex">\&quot;([^&quot;]+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${itemCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${itemCount}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">ItemNumber</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byhubId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/mail/hubId/${__V(GUID_${ItemNumber})}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">true</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - Detail" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>50.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="2199177">GUID</stringProp>
              <stringProp name="99628272">hubId</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="575553432">
                <stringProp name="187832203">${__UUID}</stringProp>
                <stringProp name="-1101057756">${hubId}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">true</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="save-mail" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;hubId&quot;: &quot;${GUID}&quot;,&#xd;
    &quot;accountId&quot;: &quot;ABC1234567890&quot;,&#xd;
    &quot;appId&quot;: &quot;HM&quot;,&#xd;
    &quot;messageType&quot;: &quot;epa&quot;,&#xd;
    &quot;payload&quot;: &quot;&lt;xml&gt;HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16 HMTest16&lt;/XML&gt;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/mail</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - AppId" enabled="false">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>1.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time - Wait for Mail Items" enabled="false">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">2000</stringProp>
            </TestAction>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byappId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/mailheader/appid/HM</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.commons.lang.StringUtils;

String response = new String(data);

vars.put(&quot;HubIds&quot;, String.valueOf(response));

int count = StringUtils.countMatches(response, &quot;,&quot;);
int itemCount = count + 1;
vars.put(&quot;itemCount&quot;, String.valueOf(itemCount));


/*
int startOfGuid = 0;
int endOfGuid = 0;
String hubId=&quot;&quot;;
for(var i = 0; i &lt; itemCount; i++)
    {
 	   startOfGuid = endOfGuid+3;
	   endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid)-1;
	   hubId = StringUtils.substring(response,startOfGuid,endOfGuid);
	   vars.put(&quot;hubId&quot;, hubId);
    }

vars.put(&quot;startOfGuid&quot;,String.valueOf(startOfGuid));
vars.put(&quot;endOfGuid&quot;,String.valueOf(endOfGuid));


int startOfGuid = 1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;);
String guid1 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid1&quot;, guid1);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid2 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid2&quot;, guid2);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid3 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid3&quot;, guid3);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid4 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid4&quot;, guid4);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid5 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid5&quot;, guid5);
*/
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">GUID</stringProp>
                <stringProp name="RegexExtractor.regex">\&quot;([^&quot;]+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${itemCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${itemCount}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">ItemNumber</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byhubId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/mail/hubId/${__V(GUID_${ItemNumber})}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Throughput Controller - AccountId" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <intProp name="ThroughputController.maxThroughput">1</intProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>100.0</value>
              <savedValue>0.0</savedValue>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time - Wait for Mail Items" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byaccountId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/mailheader/accountid/ABC1234567890</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import org.apache.commons.lang.StringUtils;

String response = new String(data);

vars.put(&quot;HubIds&quot;, String.valueOf(response));

int count = StringUtils.countMatches(response, &quot;,&quot;);
int itemCount = count + 1;
vars.put(&quot;itemCount&quot;, String.valueOf(itemCount));


/*
int startOfGuid = 0;
int endOfGuid = 0;
String hubId=&quot;&quot;;
for(var i = 0; i &lt; itemCount; i++)
    {
 	   startOfGuid = endOfGuid+3;
	   endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid)-1;
	   hubId = StringUtils.substring(response,startOfGuid,endOfGuid);
	   vars.put(&quot;hubId&quot;, hubId);
    }

vars.put(&quot;startOfGuid&quot;,String.valueOf(startOfGuid));
vars.put(&quot;endOfGuid&quot;,String.valueOf(endOfGuid));


int startOfGuid = 1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;);
String guid1 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid1&quot;, guid1);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid2 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid2&quot;, guid2);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid3 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid3&quot;, guid3);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid4 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid4&quot;, guid4);

int startOfGuid = endOfGuid+1;
int endOfGuid = StringUtils.indexOf(response,&quot;,&quot;,startOfGuid);
String guid5 = StringUtils.substring(response,startOfGuid,endOfGuid);
vars.put(&quot;guid5&quot;, guid5);
*/
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">GUID</stringProp>
                <stringProp name="RegexExtractor.regex">\&quot;([^&quot;]+)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">${itemCount}</stringProp>
            </LoopController>
            <hashTree>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">1</stringProp>
                <stringProp name="CounterConfig.end">${itemCount}</stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">ItemNumber</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get-mail-byhubId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">connect-txnstate-pfm.non-prod.hub.allscriptsplatform.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">api/mail/hubId/${__V(GUID_${ItemNumber})}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
